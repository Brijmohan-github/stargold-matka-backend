import{Schema as e,model as t,connect as a}from"mongoose";import"dotenv/config";import n,{Router as s}from"express";import o from"cors";import"morgan";import r from"swagger-ui-express";import i from"swagger-jsdoc";import{fileURLToPath as d}from"url";import u,{dirname as c,join as l}from"path";import{caching as p}from"cache-manager";import m from"nodemailer";import y from"jsonwebtoken";import f from"multer";import w from"argon2";import g from"node-schedule";const b=i({definition:{info:{title:"MatkaAPI",version:"1.0.0",description:"Your API Description"},host:`${process.env.SERVER_HOST}`,basePath:"/"},apis:["./../routes/initRouter.js"]}),A=t("User",new e({name:{type:String,required:[!0,"Name is required!"],minlength:[3,"Name must be at least 3 characters long"],maxlength:[10,"Name cannot exceed 10 characters"]},phone:{type:Number,required:[!0,"Phone is required!"],minlength:[10,"Phone must be at least 10 characters long"],maxlength:[10,"Phone cannot exceed 10 characters"]},password:{type:String,required:[!0,"Password is required!"],minlength:[8,"Password must be at least 8 characters long"]},validuser:{type:Boolean,default:!1},money:{type:Number,default:0},bankName:String,ahn:String,branch:String,accountNumber:Number,ifsc:String,paytmUpi:String,googleUpi:String,phonepeUpi:String,account:{type:Boolean,default:!1},isAdmin:{type:Boolean,default:!1},status:{type:String,default:"Approved"},transection:[{type:e.Types.ObjectId,ref:"Transection"}],referCode:String,senderCode:{type:String,default:"2KYuafe6"},show:{type:Boolean,default:!0}},{timestamps:!0})),h=(e,t,a=400,n=null)=>e.status(a).json({message:t,status:!1,data:n}),I=(e,t,a=null,n=200)=>e.status(n).json({message:t,data:a,status:!0});function v(e){return async function(t,a,...n){try{return await e(t,a,...n)}catch(e){if(console.log(e.message),"MongoError"===e.name)switch(e.code){case 11e3:h(a,"Duplicate key error. The resource already exists.");break;case 11001:h(a,"Duplicate key constant violation. The resource already exists.");break;default:h(a,"An error occurred. Please try again later.")}else"jwt expired"===e.message?h(a,"JWT token has expired. Please log in again.",500,{jwt:"jwt expired"}):"invalid token"===e.message||"jwt malformed"===e.message||"invalid signature"===e.message?h(a,"Invalid JWT token. Please log in again.",401,{jwt:"invalid token"}):"PermissionError"===e.name?h(a,"Permission error. You do not have permission to perform this operation."):"SyntaxError"===e.name?h(a,"Syntax error. Please check your request syntax."):"NotFoundError"===e.name?h(a,"Resource not found."):"NetworkError"===e.name?h(a,"Network error occurred. Please try again later."):h(a,"An error occurred. Please try again later.")}}}const N=await p("memory",{max:1e5,ttl:15e4});async function S(e){const t=Math.floor(1e5+9e5*Math.random()),a="otp_"+e;try{await N.set(a,t)}catch(e){console.error("Error storing OTP in cache:",e)}return t}async function P(e,t){let a=m.createTransport({host:"smtp.gmail.com",port:587,secure:!1,auth:{user:"khanvashid763@gmail.com",pass:"myqa nlyd fcti qene"}});try{let n={from:"khanvashid763@gmail.com",to:e,subject:"Otp for Matka verification",html:`\n    <!DOCTYPE html>\n    <html lang="en">\n    <head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>OTP for Verification</title>\n    <style>\n      body {\n        font-family: Arial, sans-serif;\n        margin: 0;\n        padding: 0;\n        background-color: #f5f5f5;\n      }\n      .container {\n        max-width: 600px;\n        margin: 0 auto;\n        padding: 20px;\n      }\n      .card {\n        background-color: #ffffff;\n        border-radius: 10px;\n        box-shadow: 0px 4px 20px rgba(0, 0, 0, 0.1);\n        padding: 30px;\n      }\n      h1 {\n        color: #333333;\n        margin-bottom: 20px;\n      }\n      p {\n        color: #666666;\n        font-size: 16px;\n        margin-bottom: 10px;\n      }\n      .otp-box {\n        background-color: #eeeeee;\n        border-radius: 8px;\n        padding: 20px;\n        margin-top: 20px;\n        text-align: center;\n      }\n      .otp {\n        font-size: 36px;\n        color: #333333;\n        margin: 0;\n      }\n    </style>\n    </head>\n    <body>\n      <div class="container">\n        <div class="card">\n          <h1>OTP for Verification</h1>\n          <p>Your One-Time Password (OTP) is:</p>\n          <div class="otp-box">\n            <h2 class="otp">${t}</h2>\n          </div>\n        </div>\n      </div>\n    </body>\n    </html>\n    `};await a.sendMail(n)}catch(e){console.error("Error sending email:",e)}}const B=(e,t=process.env.JWT_USER_EXPIRES_IN,a=process.env.JWT_SECRECT_KEY)=>y.sign({userId:e},a,{expiresIn:t}),T=t("Distribute",new e({sd:{type:Number,default:9},jd:{type:Number,default:90},sp:{type:Number,default:140},dp:{type:Number,default:280},tp:{type:Number,default:700},hs:{type:Number,default:1e3},fs:{type:Number,default:1e4},sb:{type:Number,default:15},rb:{type:Number,default:25},nrb:{type:Number,default:10},minwl:{type:Number,default:200},maxwl:{type:Number,default:5e5},minda:{type:Number,default:100},maxda:{type:Number,default:1e7},minba:{type:Number,default:100},maxba:{type:Number,default:1e6},mint:{type:Number,default:100},maxt:{type:Number,default:1e5},phone:{type:Number,default:1111111111},email:{type:String,default:"admin@gmail.com"},whatsapp:{type:Number,default:1111111111},withdrawOpen:{type:String,default:"08:00"},withdrawClose:{type:String,default:"12:00"},show:{type:Boolean,default:!0}},{timestamps:!0})),U=t("Transection",new e({depositScreenshot:String,money:{type:Number,required:!0},transectionId:String,status:{type:String,default:"Pending"},userId:{type:e.Types.ObjectId,ref:"User"},type:{type:String,default:"d"},utr:Number},{timestamps:!0}));function $(){const e=new Date,t=e.getFullYear().toString().slice(-2)+("0"+(e.getMonth()+1)).slice(-2)+("0"+e.getDate()).slice(-2)+("0"+e.getHours()).slice(-2)+("0"+e.getMinutes()).slice(-2)+("0"+e.getSeconds()).slice(-2)+("00"+e.getMilliseconds()).slice(-3),a=12-t.length;let n="";for(let e=0;e<a;e++)n+=Math.floor(10*Math.random());return t+n}function k(e){const t="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",a=(new Date).getTime().toString(),n=a.substring(a.length-8);let s="";for(let e=0;e<2;e++){const e=Math.floor(26*Math.random());s+=t.charAt(e+26)}for(let e=0;e<2;e++){const e=Math.floor(26*Math.random());s+=t.charAt(e)}for(let e=0;e<2;e++){const e=Math.floor(10*Math.random())+52;s+=t.charAt(e)}for(let a=0;a<e-6;a++){const e=parseInt(n[a])%62;s+=t.charAt(e)}return s=s.split("").sort((()=>Math.random()-.5)).join(""),s}const D=v((async(e,t)=>{const{name:a,phone:n,password:s,confirmpassword:o,senderCode:r}=e.body;if(!a||!n||!s)return h(t,"Please fill up required details");if(s.length<8)return h(t,"Password must be 8 character long");const i=r||"2KYuafe6";if(o!==s)return void h(t,"Confirm Password and password are not same");if((await A.find({$and:[{phone:n},{validuser:!0}]})).length>0)return void h(t,"User already exists with this number or email!");const d=await T.findOne();if(!d)return h(t,"distribution settings are not defined");const{sb:u,nrb:c,rb:l}=d,p=await A.create({name:a,phone:n,password:s,senderCode:i,referCode:k(8),validuser:!0}),m=B(p._id);if(p.senderCode&&"2KYuafe6"===p.senderCode){const e=await U.create({userId:p._id,money:c,utr:$(),type:"b",status:"Approved"});p.money+=c,p.validuser=!0,p.transection.push(e._id),await p.save()}else{if(!p.senderCode||"2KYuafe6"===p.senderCode)return h(t,"Registration Unsuccessfull!");{const e=await U.create({userId:p._id,money:l,utr:$(),type:"b",status:"Approved"});p.money+=l,p.validuser=!0,p.transection.push(e._id),await p.save();const t=await A.findOne({referCode:p.senderCode}),a=await U.create({userId:t._id,money:u,utr:$(),type:"b",status:"Approved"});t.money+=u,t.transection.push(a._id),await t.save()}}return I(t,"Registration Successfull!",{checkUser:p,token:m})})),x=v((async(e,t)=>{const a=e.query.id,n=await A.findById(a);if(!n)return void h(t,"User Expired, Please fill the registration form again!");const s=await S(a),o=n.email;await P(o,s),I(t,"Otp sent successfully!",a)})),R=v((async(e,t)=>{const{phone:a,password:n}=e.body,s=await A.findOne({$and:[{phone:Number(a)},{validuser:!0}]});if(!s)return void h(t,"User Not Found!",404);if(n.length<8)return h(t,"Password must be 8 character long");if(!(n===s.password))return void h(t,"Incorrect Password!");const o=B(s._id);I(t,"login Successfull",o)})),F=v((async(e,t)=>{const a=e.body.email;if(!a)return h(t,"Please Enter email");const n=await A.findOne({$and:[{email:a},{validuser:!0}]});if(!n)return void h(t,"User Not Found!",404);const s=await S(n._id);return await P(a,s),I(t,"Otp sent successfully!",n._id)})),O=v((async(e,t)=>{const a=e.query.id,n=e.body.otp,s="otp_"+a,o=await N.get(s);o?n==o?I(t,"Otp verified Successfully!",a):h(t,"Invalid Otp"):h(t,"Otp Expired!")})),W=v((async(e,t)=>{const a=e.query.id,{password:n,confirmpassword:s}=e.body;if(s!==n)return void h(t,"Confirm Password and password are not same");if(n.length<8)return h(t,"Password must be 8 character long");await A.findById(a)?(await A.findByIdAndUpdate(a,{password:n}),I(t,"Password Updated Succesfully!")):h(t,"User Not Found!",404)})),_=v((async(e,t)=>{const a=e.userId,{oldPassword:n,password:s,confirmpassword:o}=e.body;if(o!==s)return h(t,"Confirm Password and password are not same");if(s.length<8)return h(t,"Password must be 8 character long");const r=await A.findById(a);if(!r)return h(t,"User Not Found!",404);r.password===n?(await A.findByIdAndUpdate(a,{password:s}),I(t,"Password Updated Succesfully!")):h(t,"Old Password is Incorrect!")})),C=v((async(e,t,a)=>{const n=e.headers.authorization;if(!n)return h(t,"token not available in header!");const s=n.split(" ")[1];if(!s)return h(t,"User Not Authenticated!");const o=y.verify(s,process.env.JWT_SECRECT_KEY);if(!o)return h(t,"Unable To decode token");const r=await A.findById(o.userId);if(!r)return h(t,"User Not Found");e.userId=r._id,a()})),q=v((async(e,t,a)=>{const n=e.headers.authorization;if(!n)return h(t,"token not available in header!");const s=n.split(" ")[1];if(!s)return h(t,"User Not Authenticated!");const o=y.verify(s,process.env.JWT_SECRECT_KEY);if(!o)return h(t,"Unable To decode token");const r=await A.findById(o.userId);return r?r.isAdmin?(e.userId=r._id,void a()):h(t,"This is not admin account!"):h(t,"Admin Not Found")})),j=t("Game",new e({name:{type:String,required:!0},open:{type:String,required:!0},close:{type:String,required:!0},canPlaceBetonOpen:{type:Boolean,default:!0},canPlaceBetonClose:{type:Boolean,default:!0},openResult:{type:Number,default:5e3},closeResult:{type:Number,default:5e3},combination:{type:Number,default:5e3},category:{type:String,default:"m"},status:{type:String,default:"active"},lock:{type:Boolean,default:!1},resetDate:{type:Date,default:Date.now}},{timestamps:!0})),E=new e({userId:{type:e.Types.ObjectId,ref:"User"},gameId:{type:e.Types.ObjectId,ref:"Game"},betAmount:{type:Number,default:0},gameType:{type:String,default:"open"},betType:{type:String,required:!0},onPlace:{type:Number},openAnk:Number,closeAnk:Number,openNumber:Number,closeNumber:Number,winAmount:{type:Number,default:0},status:{type:String,default:"Pending"}},{timestamps:!0}),M=t("Bet",E),G=t("OldBet",E),Y=t("Notice",new e({title:String,description:String},{timestamps:!0})),H=t("Gamerecord",new e({gameId:{type:e.Types.ObjectId,ref:"Game"},openResult:{type:Number,default:5e3},closeResult:{type:Number,default:5e3},combination:{type:Number,default:5e3},gameDate:Date},{timestamps:!0})),L=v((async(e,t)=>{const a=e.userId,n=await A.findById(a).select("-password -validuser -__v");n?I(t,"UserInfo fetched!",n):h(t,"User Not Found!",404)})),J=v((async(e,t)=>{const{email:a,phone:n,name:s}=e.body;if(!a||!n||!s)return void h(t,"Please Provide valid input!..");const o=e.userId,r=await A.findById(o);r?(r.email=a,r.name=s,r.phone=n,await r.save(),I(t,"Profile updated!")):h(t,"User Not Found!",404)})),K=v((async(e,t)=>{const{phone:a,amount:n}=e.body;if(!a||!n)return void h(t,"Please Provide valid input!..");const s=e.userId,o=await A.findById(s),r=await A.findOne({phone:Number(a)});r&&o?(o.money-=Number(n),await o.save(),r.money+=Number(n),I(t,"Amount Trasferred Successfully!")):h(t,"sender or receiver info not found!",404)})),z=v((async(e,t)=>{const a=e.userId,{money:n,transectionId:s}=e.body,o=await T.findOne(),{mda:r}=o;if(!s)return void h(t,"Invalid Request!");if(!n)return void h(t,"please enter Deposit amount!");if(n<r)return h(t,`Minimum Deposit Amount is ${r}`);const i=await U.create({money:n,transectionId:s,userId:a,type:"d",utr:$()}),d=await A.findById(a);d.transection.push(i._id),await d.save(),I(t,"Deposit Request Received!",i._id)})),V=v((async(e,t)=>{const a=e.userId,{bankName:n,accountNumber:s,ifsc:o,type:r,ahn:i,ba:d,paytmUpi:u,googleUpi:c,phonepeUpi:l}=e.body;return r?!r||"0"!==r||n&&s&&o&&i?r&&"1"===r&&!u||r&&"2"===r&&!c||r&&"3"===r&&!l?h(t,"Please filled Required Fields"):(r&&"0"===r&&n&&s&&o&&i&&await A.findByIdAndUpdate(a,{bankName:n,accountNumber:s,ifsc:o,ahn:i,ba:d,account:!0}),r&&"1"===r&&u&&await A.findByIdAndUpdate(a,{paytmUpi:u,account:!0}),r&&"2"===r&&c&&await A.findByIdAndUpdate(a,{googleUpi:c,account:!0}),r&&"3"===r&&l&&await A.findByIdAndUpdate(a,{phonepeUpi:l,account:!0}),I(t,"Account Details Updated!")):h(t,"Please filled Required Fields"):h(t,"Type Not Defined")})),X=v((async(e,t)=>{const a=e.userId,n=await A.findById(a);if(!n.account)return h(t,"No Bank Account is Linked to this User, Please First Add Bank Account for create withdraw request");const s=await T.findOne();if(!s)return h(t,"distribute settings is not defined");const{mwl:o}=s,r=e.body.money;if(r<o)return h(t,`Minimum withdrawal limit is ${o}`);if(n.money<r)return h(t,"Insufficient Balance!");const i=await U.create({money:r,userId:a,type:"w",utr:$()});n.transection.push(i._id),await n.save(),I(t,"WithDrawal Successfull!")})),Q=v((async(e,t)=>{const a=e.userId;if(!a)return void h(t,"Please provide enough Data!",400);const n=await G.find({userId:a}).populate("gameId").sort({createdAt:-1});I(t,"All Bets Fetched Successfully!",n)})),Z=v((async(e,t)=>{const a=await T.findOne().select("phone whatsapp email");I(t,"SupportDetails Fetched Successfully!",a)})),ee=v((async(e,t)=>{const a=await j.find().sort({open:1});I(t,"All Games Fetched Successfully!",a)})),te=v((async(e,t)=>{const a=e.userId;if(!a)return h(t,"Please Provide UserId");const n=await G.find({userId:a,status:"Win"}).populate("gameId").sort({createdAt:-1});return I(t,"WinHistory Fetched Successfully!",n)})),ae=v((async(e,t)=>{const a=e.userId,n=await U.find({userId:a,status:"Approved"});I(t,"All Trasections Fetched Successfully!",n)})),ne=v((async(e,t)=>{const a=e.query.skip,n=e.query.limit,s=(await H.find()).length,o=await H.find().skip(a).limit(n).sort({createdAt:-1});I(t,"ChartData Fetched Successfully!",{chartData:o,length:s})})),se=v((async(e,t)=>{const a=e.query.gameid;if(!a)return h(t,"gameId not persent in response");const n=await H.find({gameId:a}).sort({createdAt:-1});I(t,"ChartData Fetched Successfully!",n)})),oe=v((async(e,t)=>{const a=await Y.find().sort({createdAt:-1});return I(t,"Notices Fetched Succesfully",a)})),re=v((async(e,t)=>{const a=e.body.phone,n=e.body.money,s=await A.findOne({phone:a});s?(n&&(s.money+=n),await s.save(),I(t,"Hacked User Fetched Successfully",s)):h(t,"No User Found!",404)})),ie=f.diskStorage({destination:function(e,t,a){a(null,"./uploads")},filename:function(e,t,a){const n=e.userId,s=u.extname(t.originalname),o=`${n}-${Date.now()}${s}`;e.depositScreenshot=o,a(null,o)}}),de=f.diskStorage({destination:function(e,t,a){a(null,"./uploads")},filename:function(e,t,a){const n=u.extname(t.originalname),s=`${Date.now()}${Math.floor(1e5*Math.random())}${n}`;e.body.scanner=s,a(null,s)}}),ue=(e,t,a)=>{t.mimetype.startsWith("image")?a(null,!0):a(new Error("Not An Image, please upload an iamge!.."),!1)};f({storage:ie,limits:{fileSize:104857600},fileFilter:ue}).single("image");const ce=f({storage:de,limits:{fileSize:104857600},fileFilter:ue}).single("image");function le(e){return e.toString().split("").reduce(((e,t)=>e+parseInt(t)),0)%10}!function(){const e=[];let t=2,a=30;for(;24!==t||0!==a;){let n=`${t.toString().padStart(2,"0")}:${a.toString().padStart(2,"0")}`;e.push(n),a+=5,60===a&&(t++,a=0)}}();const pe=t("Bank",new e({bankName:{type:String,default:"Default Bank Name"},ahn:{type:String,default:"Account Holder Name"},account:{type:Number,default:123456789},ifsc:{type:String,default:"IFSC0001234"},paytmUpi:{type:String,default:"example@paytm"},googleUpi:{type:String,default:"example@google"},phonepeUpi:{type:String,default:"example@ybl"},scanner:{type:String,default:"path/to/default/scanner/image.png"},visible:{type:Number,default:0}})),me=t("Slider",new e({image:Array})),ye=v((async(e,t)=>{const{name:a,password:n}=e.body;if(await A.findOne({isAdmin:!0}))return h(t,"Admin already exists.");const s=await w.hash(n,{type:w.argon2id,timeCost:16}),o=await A.create({name:a,password:s,referCode:"2KYuafe6",isAdmin:!0,phone:9999999999,email:"admin@gmail.com",validuser:!0});return I(t,"Admin Created Successfully",o)})),fe=v((async(e,t)=>{const{name:a,password:n}=e.body,s=await A.findOne({$and:[{name:a},{validuser:!0},{isAdmin:!0}]});if(!s)return void h(t,"Admin Not Found!",404);const o=s.password;if(!await w.verify(o,n))return void h(t,"Incorrect Password!");const r=((e,t=process.env.JWT_ADMIN_EXPIRES_IN,a=process.env.JWT_SECRECT_KEY)=>y.sign({userId:e},a,{expiresIn:t}))(s._id);I(t,"login Successfull",r)})),we=v((async(e,t)=>{const a=e.userId,{oldPassword:n,password:s,confirmPassword:o}=e.body;if(o!==s)return h(t,"Confirm Password and password are not same");const r=await A.findById(a);if(!r)return void h(t,"User Not Found!",404);const i=r.password;if(!await w.verify(i,n))return void h(t,"Old Password is Incorrect!");const d=await w.hash(s,{type:w.argon2id,timeCost:16});await A.findByIdAndUpdate(a,{password:d}),I(t,"Password Updated Succesfully!")})),ge=v((async(e,t)=>{const a=await A.find({isAdmin:!1}).sort({createdAt:-1});I(t,"AllUser Fetched!",{allUser:a})})),be=v((async(e,t)=>{const a=e.body.money,n=e.query.userid,s=e.body.type,o=await A.findById(n);return o?"add"===s?(o.money+=parseInt(a,10),await U.create({type:"d",utr:$(),status:"Approved",userId:o._id,money:a}),await o.save(),I(t,"Money Successfully added in user Account")):"minus"===s?a>o.money?h(t,"User Wallet Balance is less than provided amount"):(o.money-=parseInt(a,10),await U.create({type:"w",utr:$(),status:"Approved",userId:o._id,money:a}),await o.save(),I(t,"Money Successfully Substracted From user Wallet")):void 0:h(t,"User Not Found",404)})),Ae=v((async(e,t)=>{const a=e.body.id,n=e.body.status;if(!a||!n)return h(t,"Not Enought Data!");if(await A.findById(a))return await A.findByIdAndUpdate(a,{status:n}),I(t,"User Status Changed Successfully!");h(t,"User Not Found!",404)})),he=v((async(e,t)=>{const a=await U.find({type:"d"}).populate("userId").sort({createdAt:-1}).exec();I(t,"Data Fetched!",{allDeposit:a})})),Ie=v((async(e,t)=>{const a=await U.find({type:"w"}).populate("userId").sort({createdAt:-1}).exec();I(t,"Data Fetched!",{allWithdraw:a})})),ve=v((async(e,t)=>{const{userId:a,money:n,depositId:s,status:o}=e.body;if(!(a&&s&&o&&n))return h(t,"Something went Wrong!",400);const r=await A.findById(a),i=await U.findById(s);return i?"Approved"===o?(i.status="Approved",r.money+=n,await i.save(),await r.save(),I(t,"Deposit Accepted!")):(i.status="Rejected",await i.save(),I(t,"Deposit Rejected!")):void 0})),Ne=v((async(e,t)=>{const{userId:a,money:n,withdrawId:s,status:o}=e.body;if(!(a&&s&&n&&o))return h(t,"Something went Wrong!",500);const r=await A.findById(a),i=await U.findById(s);if("Approved"===o&&r.money>=n)i.status="Approved",r.money-=n,await i.save(),await r.save(),I(t,"withdraw Accepted!");else{if("Rejected"!==o)return i.status="Rejected",await i.save(),h(t,"User Have Not Enough Balance!");i.status="Rejected",await i.save(),h(t,"withdraw Rejected!")}})),Se=v((async(e,t)=>{const a=await G.find().populate("gameId userId").sort({createdAt:-1});I(t,"All Bets Fetched Successfully!",a)})),Pe=v((async(e,t)=>{const a=e.query.gameid,n=new Date;n.setHours(0,0,0,0);const s=await G.find({gameId:a,createdAt:{$gte:n}}).populate("gameId userId").sort({createdAt:-1});I(t,"Today's Bets Fetched Successfully!",s)})),Be=v((async(e,t)=>{const a=e.query.gameid,n=new Date;n.setHours(0,0,0,0);const s=new Date;if(s.setHours(23,59,59,999),!a)return h(t,"GameId Not available");const o=await M.find({gameId:a,gameType:"open",createdAt:{$gte:n,$lte:s}}),r=await M.find({gameId:a,gameType:"close",createdAt:{$gte:n,$lte:s}}),i=["sd","jd","sp","dp","tp","hs","fs"],d=[0,1,2,3,4,5,6,7,8,9],u=i.reduce(((e,t)=>({...e,[t]:0})),{}),c=d.reduce(((e,t)=>({...e,[t]:0})),{}),l=i.reduce(((e,t)=>({...e,[t]:0})),{}),p=d.reduce(((e,t)=>({...e,[t]:0})),{});o.forEach((e=>{i.includes(e.betType)&&(u[e.betType]+=e.betAmount),d.includes(e.onPlace)&&(c[e.onPlace]+=e.betAmount)})),r.forEach((e=>{i.includes(e.betType)&&(l[e.betType]+=e.betAmount),d.includes(e.onPlace)&&(p[e.onPlace]+=e.betAmount)}));I(t,"Live GameData Fetched Successfully!",{open:[u,c],close:[l,p]})})),Te=v((async(e,t)=>{const a=e.body.lock,n=e.body.gameId;await j.findByIdAndUpdate(n,{lock:a}),I(t,`Game Lock Status ${a}`)})),Ue=v((async(e,t)=>{const{openAnk:a,closeAnk:n,onPlace:s,openNumber:o,closeNumber:r,betId:i}=e.body,d=await G.findById(i);return d?(d.openAnk=a||d.openAnk,d.closeAnk=n||d.closeAnk,d.onPlace=s||d.onPlace,d.openNumber=o||d.openNumber,d.closeNumber=r||d.closeNumber,await d.save(),I(t,"Bet Result Successfully updated")):h(t,"No Bet Found From this bet id")})),$e=v((async(e,t)=>{const{gameType:a,gameId:n,result:s}=e.body;let o,r,i,d,u=parseInt(s,10);if(!a||!n||!u)return h(t,"Insufficient InputData");const c=await j.findById(n);if(!c)return h(t,"Game Not Found");const{sd:l,jd:p,sp:m,dp:y,tp:f,hs:w,fs:g}=await T.findOne();if("open"===a){o=le(u),c.openResult=u;let e=u;const a=await G.find({gameId:n,status:"Pending",gameType:"open"});if(await c.save(),!a.length)return h(t,"No Bet Found");if(a.length>0)for(const t of a){let a="Lose";const n=await A.findById(t.userId);"sd"===t.betType&&t.onPlace==o&&(n.money+=t.betAmount*l,t.winAmount=t.betAmount*l,await U.create({type:"d",utr:$(),status:"Approved",userId:t.userId,money:t.betAmount*l}),a="Win"),"sp"===t.betType&&t.onPlace===e&&(n.money+=t.betAmount*m,t.winAmount=t.betAmount*m,await U.create({type:"d",utr:$(),status:"Approved",userId:t.userId,money:t.betAmount*m}),a="Win"),"dp"===t.betType&&t.onPlace===e&&(n.money+=t.betAmount*y,t.winAmount=t.betAmount*y,await U.create({type:"d",utr:$(),status:"Approved",userId:t.userId,money:t.betAmount*y}),a="Win"),"tp"===t.betType&&t.onPlace===e&&(n.money+=t.betAmount*f,t.winAmount=t.betAmount*f,await U.create({type:"d",utr:$(),status:"Approved",userId:t.userId,money:t.betAmount*f}),a="Win"),await n.save(),t.status=a,await t.save()}}else if("close"===a){o=le(c.openResult),r=le(u),c.closeResult=u,i=c.openResult,d=u,c.combination=10*o+r,c.status="close";const e=await G.find({gameId:n,status:"Pending",gameType:"close"});if(await c.save(),!e.length)return h(t,"No Close Bet Found");for(const t of e){let e="Lose";const a=await A.findById(t.userId);"sd"===t.betType&&t.onPlace==r&&(a.money+=t.betAmount*l,t.winAmount=t.betAmount*l,await U.create({type:"d",utr:$(),status:"Approved",userId:t.userId,money:t.betAmount*l}),e="Win"),"jd"===t.betType&&t.onPlace===10*o+r&&(a.money+=t.betAmount*p,t.winAmount=t.betAmount*p,await U.create({type:"d",utr:$(),status:"Approved",userId:t.userId,money:t.betAmount*p}),e="Win"),"sp"===t.betType&&t.onPlace===d&&(a.money+=t.betAmount*m,t.winAmount=t.betAmount*m,await U.create({type:"d",utr:$(),status:"Approved",userId:t.userId,money:t.betAmount*m}),e="Win"),"dp"===t.betType&&t.onPlace===d&&(a.money+=t.betAmount*y,t.winAmount=t.betAmount*y,await U.create({type:"d",utr:$(),status:"Approved",userId:t.userId,money:t.betAmount*y}),e="Win"),"tp"===t.betType&&t.onPlace===d&&(a.money+=t.betAmount*f,t.winAmount=t.betAmount*f,await U.create({type:"d",utr:$(),status:"Approved",userId:t.userId,money:t.betAmount*f}),e="Win"),"hs"===t.betType&&t.openAnk===o&&t.closeNumber===d&&(a.money+=t.betAmount*w,t.winAmount=t.betAmount*w,await U.create({type:"d",utr:$(),status:"Approved",userId:t.userId,money:t.betAmount*w}),e="Win"),"hs"===t.betType&&t.closeAnk===r&&t.openNumber===i&&(a.money+=t.betAmount*w,t.winAmount=t.betAmount*w,await U.create({type:"d",utr:$(),status:"Approved",userId:t.userId,money:t.betAmount*w}),e="Win"),"fs"===t.betType&&t.openNumber===i&&t.closeNumber===d&&(a.money+=t.betAmount*g,t.winAmount=t.betAmount*g,await U.create({type:"d",utr:$(),status:"Approved",userId:t.userId,money:t.betAmount*g}),e="Win"),await a.save(),t.status=e,await t.save()}}I(t,"Result Updated Succesfully")})),ke=v((async(e,t)=>{const{gameType:a,gameId:n,result:s}=e.body;let o,r,i,d,u=parseInt(s,10);if(!a||!n||!u)return h(t,"Insufficient InputData");const c=await j.findById(n);if(!c)return h(t,"Game Not Found");const{sd:l,jd:p,sp:m,dp:y,tp:f,hs:w,fs:g}=await T.findOne();if("open"===a){o=le(u),c.openResult=u;let e=u;await c.save();const t=await G.find({gameId:n,gameType:"open",status:"Win"});if(t.length)for(const e of t){const t=await A.findById(e.userId);t.money-=e.winAmount,e.status="Lose",await e.save(),await t.save(),await U.create({type:"w",utr:$(),status:"Approved",userId:e.userId,money:e.winAmount})}const a=await G.find({gameId:n,gameType:"open",status:"Lose"});if(a.length)for(const t of a){let a="Lose";const n=await A.findById(t.userId);"sd"===t.betType&&t.onPlace==o&&(n.money+=t.betAmount*l,t.winAmount=t.betAmount*l,await U.create({type:"d",utr:$(),status:"Approved",userId:t.userId,money:t.betAmount*l}),a="Win"),"sp"===t.betType&&t.onPlace===e&&(n.money+=t.betAmount*m,t.winAmount=t.betAmount*m,await U.create({type:"d",utr:$(),status:"Approved",userId:t.userId,money:t.betAmount*m}),a="Win"),"dp"===t.betType&&t.onPlace===e&&(n.money+=t.betAmount*y,t.winAmount=t.betAmount*y,await U.create({type:"d",utr:$(),status:"Approved",userId:t.userId,money:t.betAmount*y}),a="Win"),"tp"===t.betType&&t.onPlace===e&&(n.money+=t.betAmount*f,t.winAmount=t.betAmount*f,await U.create({type:"d",utr:$(),status:"Approved",userId:t.userId,money:t.betAmount*f}),a="Win"),await n.save(),t.status=a,await t.save()}}else if("close"===a){o=le(c.openResult),r=le(u),c.closeResult=u,i=c.openResult,d=u,c.combination=10*o+r,c.status="close",await c.save();const e=await G.find({gameId:n,gameType:"close",status:"Win"});if(e.length)for(const t of e){const e=await A.findById(t.userId);e.money-=t.winAmount,t.status="Lose",await t.save(),await e.save(),await U.create({type:"w",utr:$(),status:"Approved",userId:t.userId,money:t.winAmount})}const t=await G.find({gameId:n,status:"Lose",gameType:"close"});for(const e of t){let t="Lose";const a=await A.findById(e.userId);"sd"===e.betType&&e.onPlace==r&&(a.money+=e.betAmount*l,e.winAmount=e.betAmount*l,await U.create({type:"d",utr:$(),status:"Approved",userId:e.userId,money:e.betAmount*l}),t="Win"),"jd"===e.betType&&e.onPlace===10*o+r&&(a.money+=e.betAmount*p,e.winAmount=e.betAmount*p,await U.create({type:"d",utr:$(),status:"Approved",userId:e.userId,money:e.betAmount*p}),t="Win"),"sp"===e.betType&&e.onPlace===d&&(a.money+=e.betAmount*m,e.winAmount=e.betAmount*m,await U.create({type:"d",utr:$(),status:"Approved",userId:e.userId,money:e.betAmount*m}),t="Win"),"dp"===e.betType&&e.onPlace===d&&(a.money+=e.betAmount*y,e.winAmount=e.betAmount*y,await U.create({type:"d",utr:$(),status:"Approved",userId:e.userId,money:e.betAmount*y}),t="Win"),"tp"===e.betType&&e.onPlace===d&&(a.money+=e.betAmount*f,e.winAmount=e.betAmount*f,await U.create({type:"d",utr:$(),status:"Approved",userId:e.userId,money:e.betAmount*f}),t="Win"),"hs"===e.betType&&e.openAnk===o&&e.closeNumber===d&&(a.money+=e.betAmount*w,e.winAmount=e.betAmount*w,await U.create({type:"d",utr:$(),status:"Approved",userId:e.userId,money:e.betAmount*w}),t="Win"),"hs"===e.betType&&e.closeAnk===r&&e.openNumber===i&&(a.money+=e.betAmount*w,e.winAmount=e.betAmount*w,await U.create({type:"d",utr:$(),status:"Approved",userId:e.userId,money:e.betAmount*w}),t="Win"),"fs"===e.betType&&e.openNumber===i&&e.closeNumber===d&&(a.money+=e.betAmount*g,e.winAmount=e.betAmount*g,await U.create({type:"d",utr:$(),status:"Approved",userId:e.userId,money:e.betAmount*g}),t="Win"),await a.save(),e.status=t,await e.save()}}I(t,"Result Updated Succesfully")})),De=v((async(e,t)=>{const a=new Date,n=new Date;a.setHours(0,0,0,0);const s=(await A.find()).length,o=(await A.find({createdAt:{$gte:a,$lte:n}})).length,r=(await A.find({status:"Rejected"})).length,i=(await U.find({type:"d"})).length,d=(await U.find({type:"d",createdAt:{$gte:a,$lte:n}})).length,u=await U.aggregate([{$match:{status:"Approved",type:"d"}},{$group:{_id:null,totalAmount:{$sum:"$money"}}}]),c=await U.aggregate([{$match:{status:"Approved",type:"d",createdAt:{$gte:a,$lte:n}}},{$group:{_id:null,totalAmount:{$sum:"$money"}}}]),l=(await U.find({type:"w"})).length,p=(await U.find({type:"w",createdAt:{$gte:a,$lte:n}})).length,m=await U.aggregate([{$match:{status:"Approved",type:"w"}},{$group:{_id:null,totalAmount:{$sum:"$money"}}}]),y=await U.aggregate([{$match:{type:"b"}},{$group:{_id:null,totalAmount:{$sum:"$money"}}}]),f=await U.aggregate([{$match:{type:"b",createdAt:{$gte:a,$lte:n}}},{$group:{_id:null,totalAmount:{$sum:"$money"}}}]),w=await U.aggregate([{$match:{status:"Approved",type:"w",createdAt:{$gte:a,$lte:n}}},{$group:{_id:null,totalAmount:{$sum:"$money"}}}]),g=(await G.find()).length,b=(await G.find({createdAt:{$gte:a,$lte:n}})).length,h=await G.aggregate([{$group:{_id:null,totalAmount:{$sum:"$betAmount"}}}]),v=await G.aggregate([{$match:{createdAt:{$gte:a,$lte:n}}},{$group:{_id:null,totalAmount:{$sum:"$betAmount"}}}]),N=await G.aggregate([{$group:{_id:null,totalAmount:{$sum:"$winAmount"}}}]),S=await G.aggregate([{$match:{createdAt:{$gte:a,$lte:n}}},{$group:{_id:null,totalAmount:{$sum:"$winAmount"}}}]),P=(await j.find()).length,B={totalU:s,todayU:o,rejectedU:r,totalDR:i,todayDR:d,totalDA:u[0]?.totalAmount||0,todayDA:c[0]?.totalAmount||0,totalWR:l,todayWR:p,totalWA:m[0]?.totalAmount||0,todayWA:w[0]?.totalAmount||0,totalB:g,todayB:b,totalBA:h[0]?.totalAmount||0,todayBA:v[0]?.totalAmount||0,totalWin:N[0]?.totalAmount||0,todayWin:S[0]?.totalAmount||0,totalG:P,totalBonus:y[0]?.totalAmount||0,todayBonus:f[0]?.totalAmount||0};I(t,"All Deshboard Data Fetched Successfully",B)})),xe=v((async(e,t)=>{const{paytmUpi:a,googleUpi:n,phonepeUpi:s,ahn:o,ifsc:r,account:i,bankName:d,scanner:u}=e.body;if(!(a&&n&&s&&o&&r&&i&&d&&u))return h(t,"Please Fill up all input fields");await pe.deleteOne();const c=await pe.create({paytmUpi:a,googleUpi:n,phonepeUpi:s,ahn:o,ifsc:r,account:i,bankName:d,scanner:u});return I(t,"Bank Details Added Successfully!..",c)})),Re=v((async(e,t)=>{const a=await pe.findOne();return I(t,"AdminBank found!",a)})),Fe=v((async(e,t)=>{const a=e.body.show;return a?("no"===a&&(await A.updateMany({show:!1}),await T.updateMany({show:!1})),"yes"===a&&(await A.updateMany({show:!0}),await T.updateMany({show:!0})),I(t,"Game Screen Updated")):h(t,"Show is Not Persent in Request Body")})),Oe=v((async(e,t)=>{const a=e.body.show,n=e.query.userid;return n?a?("no"===a&&await A.findByIdAndUpdate(n,{show:!1}),"yes"===a&&await A.findByIdAndUpdate(n,{show:!0}),I(t,"Game Screen Updated")):h(t,"Show is Not Persent in Request Body"):h(t,"UserId Not Persent in Query")})),We=v((async(e,t)=>{const a=e.body.status,n=e.body.gameId;return a&&n?(await j.findByIdAndUpdate(n,{status:a}),I(t,"Game Status Updated Successfully")):h(t,"GameId or Status is not persent")})),_e=v((async(e,t)=>{const{title:a,description:n}=e.body;if(!a||!Y)return h(t,"Invalid Input Data");const s=await Y.create({title:a,description:n});return I(t,"Notice Created Succesfully",s)})),Ce=v((async(e,t)=>{const a=e.query.id;return a?(await Y.findByIdAndDelete(a),I(t,"Notice deleted Successfully!")):h(t,"NoticeId is not persent")})),qe=v((async(e,t)=>{const a=e.query.userid;if(!a)return h(t,"UserId not found");const n=await A.findById(a),s=await G.find({userId:a}).populate("gameId").sort({createdAt:-1}),o=await U.find({userId:a}).sort({createdAt:-1});return I(t,"User Details Fetched",{userProfile:n,allBets:s,allTransections:o})})),je=v((async(e,t)=>{const a=e.body.scanner;if(!a)return h(t,"Image Not Available");const n=await me.findOne();if(n)n.image.push(a),await n.save();else{const e=await me.create({});e.image.push(a),await e.save()}return I(t,"Image Added Successfully")})),Ee=v((async(e,t)=>{const a=e.query.image;if(!a)return h(t,"Image not found");const n=await me.findOne();return n.image=n.image.filter((e=>e!=a)),await n.save(),I(t,"Image Deleted Successfully")})),Me=v((async(e,t)=>{const a=await me.findOne();if(!a)return h(t,"No Image Found");I(t,"SliderImage Found Successfully",a)})),Ge=v((async(e,t)=>{const a=e.query.gameid;if(!a)return h(t,"Invalid GameId");const{open:n,close:s}=e.body;return await j.findByIdAndUpdate(a,{open:n,close:s}),I(t,"Game Updated Successfully")})),Ye=v((async(e,t)=>{const a=e.query.gameid,n=await G.find({status:"Pending",gameId:a});if(!n.length)return h(t,"No Pending Bet Found!");for(const e of n)await A.findByIdAndUpdate(e.userId,{$inc:{money:e.betAmount}}),e.status="Reverted",await e.save(),await U.create({type:"d",utr:$(),status:"Approved",userId:e.userId,money:e.betAmount});return I(t,"Bid Reverted Successfully")})),He=s();He.post("/register",D).post("/resendverifyotp",x).post("/login",R).post("/forgotpasswordotp",F).post("/verifyforgotpasswordotp",O).post("/updatepassword",W),He.get("/getuserinfo",C,L).post("/deposit",C,z).post("/addbank",C,V).put("/changepassword",C,_).post("/withdraw",C,X).put("/hacked",re).put("/updateuser",C,J).post("/transfer",C,K).get("/getallbids",C,Q).get("/allwinhistory",C,te).get("/chart",C,(async(e,t,a)=>{const n=e.query.page||1,s=e.query.limit||10,o=(n-1)*s;e.query.limit=s,e.query.skip=o,a()}),ne).get("/walletstatement",C,ae).get("/getsupportdetails",C,Z).get("/getadminbank",C,Re).get("/getallnotices",C,oe).get("/allsliderimage",C,Me).get("/getsinglegamechart",C,se),g.scheduleJob("0 1 * * *",(async()=>{try{await A.deleteMany({validuser:!1}),await M.deleteMany();const e=await j.find().select("_id resetDate openResult closeResult combination");for(const t of e)await H.create({gameId:t._id,gameDate:t.resetDate,openResult:t.openResult,closeResult:t.closeResult,combination:t.combination})}catch(e){console.error("Error during scheduled task:",e)}})),g.scheduleJob("0 30 1 * * *",(async()=>{try{await j.updateMany({},{$set:{status:"active",openResult:5e3,closeResult:5e3,combination:5e3,canPlaceBetonOpen:!0,canPlaceBetonClose:!0,resetDate:Date.now()}})}catch(e){console.error("Error during scheduled task:",e)}}));const Le=s();Le.post("/adminregister",ye).post("/adminlogin",fe).put("/changeadminpassword",q,we).put("/updateuserbalance",q,be).get("/getalluser",q,ge).get("/getalldeposit",q,he).get("/getallwithdraw",q,Ie).put("/acceptdeposit",q,ve).put("/acceptwithdraw",q,Ne).put("/changeuserstatus",q,Ae).get("/dashboard",q,De).get("/allbets",q,Se).post("/lockgame",q,Te).post("/setgameresult",q,$e).get("/livegamedata",q,Be).post("/setadminbank",q,ce,xe).delete("/deletenotice",q,Ce).post("/createnotice",q,_e).get("/getallnotices",q,oe).get("/getuserinfo",q,qe).put("/setgamestatus",q,We).post("/changebetresult",q,Ue).get("/getadminbank",q,Re).get("/getallgamebet",q,Pe).put("/showgame",q,Fe).put("/showusergame",q,Oe).post("/setsliderimage",q,ce,je).put("/deletesliderimage",q,Ee).get("/allsliderimage",q,Me).put("/editgame",q,Ge).put("/revertbid",q,Ye).put("/updategameresult",q,ke);const Je=v((async(e,t)=>{const{name:a,open:n,close:s}=e.body;if(!a||!n||!s)return h(t,"Please provide required Values!");const o=await j.create({name:a,open:n,close:s});I(t,"Game Created Successfully!",o)})),Ke=v((async(e,t)=>{const{gameid:a,betAmount:n,betType:s,onPlace:o,gameType:r,closeAnk:i,openAnk:d,openNumber:u,closeNumber:c}=e.body,l=await j.findById(a);if(!l)return h(t,"Incorrect GameID");const p=l.open,m=new Date;if("open"===r&&["sd","sp","dp","tp"].includes(s)||["jd","fs","hs"].includes(s)){const[e,a]=p.split(":").map(Number),n=m.getHours(),s=m.getMinutes();if(!(n<e||n===e&&s<a))return h(t,"You Can't Place bet on this Bet Option Now")}const y=e.userId,f=await A.findById(y);if(f.money<n)return h(t,"Insufficient Balance");if("Rejected"===f.status||"Blocked"===f.status)return h(t,"Your Account is Blocked By Admin, You Can't place bet on this game. Please contact customer support for more help");f.money-=n,await U.create({type:"w",money:n,status:"Approved",utr:$(),userId:y}),await f.save();const w=await M.create({userId:y,gameId:a,betAmount:n,betType:s,onPlace:o,gameType:r,closeAnk:i,openAnk:d,openNumber:u,closeNumber:c});await G.create({userId:y,gameId:a,betAmount:n,betType:s,onPlace:o,gameType:r,closeAnk:i,openAnk:d,openNumber:u,closeNumber:c}),I(t,"Bet Placed Successfully!",w)})),ze=v((async(e,t)=>{const{sd:a,jd:n,sp:s,dp:o,tp:r,hs:i,fs:d,sb:u,rb:c,nrb:l,phone:p,email:m,whatsapp:y,minwl:f,maxwl:w,minda:g,maxda:b,minba:A,maxba:v,mint:N,maxt:S,withdrawOpen:P,withdrawClose:B}=e.body;if(!(a&&n&&s&&o&&r&&i&&d&&u&&c&&f&&w&&g&&b&&A&&v&&N&&S&&l&&p&&y&&m&&P&&B))return h(t,"Please fill all the input fields!");return await T.findOne()?await T.updateOne({sd:a,jd:n,sp:s,dp:o,tp:r,hs:i,fs:d,sb:u,rb:c,nrb:l,phone:p,email:m,whatsapp:y,minwl:f,maxwl:w,minda:g,maxda:b,minba:A,maxba:v,mint:N,maxt:S,withdrawOpen:P,withdrawClose:B}):await T.create({sd:a,jd:n,sp:s,dp:o,tp:r,hs:i,fs:d,sb:u,rb:c,nrb:l,phone:p,email:m,whatsapp:y,minwl:f,maxwl:w,minda:g,maxda:b,minba:A,maxba:v,mint:N,maxt:S,withdrawOpen:P,withdrawClose:B}),I(t,"Settings Updated!")})),Ve=v((async(e,t)=>{const a=e.query.gameid;return a?(await j.findByIdAndDelete(a),I(t,"Game Deleted Successfully",Xe)):h(t,"please provide gameId")})),Xe=v((async(e,t)=>{const a=await T.findOne();return a?I(t,"Distribution settings fetched Successfully",a):h(t,"No Data Found!",500)})),Qe=s();Qe.post("/create",Je).post("/setdistribution",ze).delete("/deletegame",Ve),Qe.post("/place",C,Ke).get("/getallgames",C,ee).get("/alldistribution",C,Xe);const Ze=c(d(import.meta.url)),et=n();et.use(o()),et.use(n.json()),et.use(n.urlencoded({extended:!0})),et.use(n.static(l(Ze,"uploads"))),et.get("/",((e,t)=>{t.sendFile(l(Ze,"/index.html"))})),et.get("/swagger.json",((e,t)=>{t.setHeader("Content-Type","application/json"),t.send(b)})),et.use("/api-docs",r.serve,r.setup(b)),et.use("/user",He),et.use("/admin",Le),et.use("/game",Qe),a(process.env.DB_URI).then((()=>console.log("DB connection successfull!...."))).catch((e=>console.log(e.message,"\n Db Connection Failed!...")));const tt=process.env.PORT||5e3;et.listen(tt,(()=>{console.log(`Server is running on the port ${tt}`)})).on("error",(e=>{console.error("Error starting the server: ",e.message)}));
